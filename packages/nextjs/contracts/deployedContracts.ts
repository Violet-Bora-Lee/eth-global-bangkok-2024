/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  84532: {
    Profile: {
      address: "0xb2292072B4E0D973E3EA87673599a9842A1FdEbe",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "DriverAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "DriverRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "PassengerAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "PassengerRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_startingRate",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_carAssetUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "_profileAssetUrl",
              type: "string",
            },
          ],
          name: "addDriver",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_startingRate",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_profileAssetUrl",
              type: "string",
            },
          ],
          name: "addPassenger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getDriver",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "isDriver",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "rate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "carAssetUrl",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "infoAssetUrl",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "counterCourse",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "zkPassport",
                  type: "string",
                },
              ],
              internalType: "struct Profile.Driver",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getDriverCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getDriverRate",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getPassenger",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "isPassenger",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "rate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "infoAssetUrl",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "counterCourse",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "zkPassport",
                  type: "string",
                },
              ],
              internalType: "struct Profile.Passenger",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getPassengerCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getPassengerRate",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "isDriver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "isPassenger",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "removeDriver",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "removePassenger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_newRate",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_account",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_isDriver",
              type: "bool",
            },
          ],
          name: "updateRate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    RideManagement: {
      address: "0x1b78aA9A1a567Ef6d7B10Cb6a3F138547a577290",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "passenger",
              type: "address",
            },
          ],
          name: "RideBooked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "RideCanceled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "RideCompleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "RidePosted",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "bookRide",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "cancelRide",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "completeRide",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllRides",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "id",
                  type: "bytes32",
                },
                {
                  internalType: "enum RideManagement.RideState",
                  name: "state",
                  type: "uint8",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address[]",
                  name: "passengers",
                  type: "address[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalSeats",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableSeats",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "destination",
                  type: "string",
                },
              ],
              internalType: "struct RideManagement.Ride[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "getRide",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "id",
                  type: "bytes32",
                },
                {
                  internalType: "enum RideManagement.RideState",
                  name: "state",
                  type: "uint8",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address[]",
                  name: "passengers",
                  type: "address[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalSeats",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableSeats",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "destination",
                  type: "string",
                },
              ],
              internalType: "struct RideManagement.Ride",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalSeats",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "destination",
              type: "string",
            },
          ],
          name: "postRide",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    TransportWithAttestation: {
      address: "0xDD6Ff5F2f0A5a2e3dB5a71D2B359fFEC21Beef7C",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_attestationService",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "rating",
              type: "uint256",
            },
          ],
          name: "RequestCompleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "paymentAmount",
              type: "uint256",
            },
          ],
          name: "RequestCreated",
          type: "event",
        },
        {
          inputs: [],
          name: "attestationService",
          outputs: [
            {
              internalType: "contract IAttestationService",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "rating",
              type: "uint256",
            },
          ],
          name: "completeRequest",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "serviceProvider",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "paymentAmount",
              type: "uint256",
            },
          ],
          name: "createRequest",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getAverageRating",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
          ],
          name: "getRequest",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "requester",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "serviceProvider",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "paymentAmount",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "completed",
                  type: "bool",
                },
              ],
              internalType: "struct TransportWithAttestation.Request",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "ratingCounts",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "ratings",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "requestCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "requests",
          outputs: [
            {
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              internalType: "address",
              name: "serviceProvider",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "paymentAmount",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "completed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  534351: {
    Profile: {
      address: "0xb2292072B4E0D973E3EA87673599a9842A1FdEbe",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "DriverAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "DriverRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "PassengerAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "PassengerRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_startingRate",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_carAssetUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "_profileAssetUrl",
              type: "string",
            },
          ],
          name: "addDriver",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_startingRate",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_profileAssetUrl",
              type: "string",
            },
          ],
          name: "addPassenger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getDriver",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "isDriver",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "rate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "carAssetUrl",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "infoAssetUrl",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "counterCourse",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "zkPassport",
                  type: "string",
                },
              ],
              internalType: "struct Profile.Driver",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getDriverCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getDriverRate",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getPassenger",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "isPassenger",
                  type: "bool",
                },
                {
                  internalType: "uint256",
                  name: "rate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "infoAssetUrl",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "counterCourse",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "zkPassport",
                  type: "string",
                },
              ],
              internalType: "struct Profile.Passenger",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getPassengerCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getPassengerRate",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "isDriver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "isPassenger",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "removeDriver",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "removePassenger",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_newRate",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_account",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_isDriver",
              type: "bool",
            },
          ],
          name: "updateRate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    RideManagement: {
      address: "0x1b78aA9A1a567Ef6d7B10Cb6a3F138547a577290",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "passenger",
              type: "address",
            },
          ],
          name: "RideBooked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "RideCanceled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "RideCompleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "RidePosted",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "bookRide",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "cancelRide",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "completeRide",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllRides",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "id",
                  type: "bytes32",
                },
                {
                  internalType: "enum RideManagement.RideState",
                  name: "state",
                  type: "uint8",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address[]",
                  name: "passengers",
                  type: "address[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalSeats",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableSeats",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "destination",
                  type: "string",
                },
              ],
              internalType: "struct RideManagement.Ride[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "rideId",
              type: "bytes32",
            },
          ],
          name: "getRide",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "id",
                  type: "bytes32",
                },
                {
                  internalType: "enum RideManagement.RideState",
                  name: "state",
                  type: "uint8",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address[]",
                  name: "passengers",
                  type: "address[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalSeats",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableSeats",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "destination",
                  type: "string",
                },
              ],
              internalType: "struct RideManagement.Ride",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalSeats",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "destination",
              type: "string",
            },
          ],
          name: "postRide",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    TransportWithAttestation: {
      address: "0x770256636bA476F19128fBB8193d646D584eC7cc",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_attestationService",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "rating",
              type: "uint256",
            },
          ],
          name: "RequestCompleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "paymentAmount",
              type: "uint256",
            },
          ],
          name: "RequestCreated",
          type: "event",
        },
        {
          inputs: [],
          name: "attestationService",
          outputs: [
            {
              internalType: "contract IAttestationService",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "rating",
              type: "uint256",
            },
          ],
          name: "completeRequest",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "serviceProvider",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "paymentAmount",
              type: "uint256",
            },
          ],
          name: "createRequest",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getAverageRating",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
          ],
          name: "getRequest",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "requester",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "serviceProvider",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "paymentAmount",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "completed",
                  type: "bool",
                },
              ],
              internalType: "struct TransportWithAttestation.Request",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "ratingCounts",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "ratings",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "requestCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "requests",
          outputs: [
            {
              internalType: "address",
              name: "requester",
              type: "address",
            },
            {
              internalType: "address",
              name: "serviceProvider",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "paymentAmount",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "completed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
