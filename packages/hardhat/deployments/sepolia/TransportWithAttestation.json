{
  "address": "0xC9D8C072800026880af700aB0844b69c916EC527",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_attestationService",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_chronicle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_selfKisser",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rating",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalPayment",
          "type": "uint256"
        }
      ],
      "name": "RequestCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceAtRequest",
          "type": "uint256"
        }
      ],
      "name": "RequestCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "attestationService",
      "outputs": [
        {
          "internalType": "contract IAttestationService",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chronicle",
      "outputs": [
        {
          "internalType": "contract IChronicle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rating",
          "type": "uint256"
        }
      ],
      "name": "completeRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "serviceProvider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getAverageRating",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "getRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "requester",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "serviceProvider",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "paymentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceAtRequest",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "completed",
              "type": "bool"
            }
          ],
          "internalType": "struct TransportWithAttestation.Request",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ratingCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ratings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "read",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "serviceProvider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceAtRequest",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfKisser",
      "outputs": [
        {
          "internalType": "contract ISelfKisser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe1dda272668d0b2a39bb6ceca37e30f773cf56ca9b5561d692d0530f4f2d26c0",
  "receipt": {
    "to": null,
    "from": "0xf15eBd90B2E453cb96663d119380Cc9D03F04DdA",
    "contractAddress": "0xC9D8C072800026880af700aB0844b69c916EC527",
    "transactionIndex": 64,
    "gasUsed": "905647",
    "logsBloom": "0x
    "blockHash": "0xc6ff7bc258af94726c2e0b99aa93f10c9d03d05a61286a98332fe279d71a5442",
    "transactionHash": "0xe1dda272668d0b2a39bb6ceca37e30f773cf56ca9b5561d692d0530f4f2d26c0",
    "logs": [
      {
        "transactionIndex": 64,
        "blockNumber": 7089639,
        "transactionHash": "0xe1dda272668d0b2a39bb6ceca37e30f773cf56ca9b5561d692d0530f4f2d26c0",
        "address": "0xc6639C0591d632Bf689ceab617A0377072e7f524",
        "topics": [
          "0x75d30ca40c7bcd48e685894b82b864808b9cb566090efc53444a2e61742f18a3",
          "0x0000000000000000000000000dcc19657007713483a5ca76e6a7bbe5f56ea37d",
          "0x000000000000000000000000c9d8c072800026880af700ab0844b69c916ec527"
        ],
        "data": "0x",
        "logIndex": 76,
        "blockHash": "0xc6ff7bc258af94726c2e0b99aa93f10c9d03d05a61286a98332fe279d71a5442"
      },
      {
        "transactionIndex": 64,
        "blockNumber": 7089639,
        "transactionHash": "0xe1dda272668d0b2a39bb6ceca37e30f773cf56ca9b5561d692d0530f4f2d26c0",
        "address": "0x0Dcc19657007713483A5cA76e6A7bbe5f56EA37d",
        "topics": [
          "0x3b6e7e6ff858d016edf22112c8596ecf8f0a55591a3b84c35b993e0de85a0c84",
          "0x000000000000000000000000c9d8c072800026880af700ab0844b69c916ec527",
          "0x000000000000000000000000c6639c0591d632bf689ceab617a0377072e7f524",
          "0x000000000000000000000000c9d8c072800026880af700ab0844b69c916ec527"
        ],
        "data": "0x",
        "logIndex": 77,
        "blockHash": "0xc6ff7bc258af94726c2e0b99aa93f10c9d03d05a61286a98332fe279d71a5442"
      }
    ],
    "blockNumber": 7089639,
    "cumulativeGasUsed": "11575940",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf15eBd90B2E453cb96663d119380Cc9D03F04DdA",
    "0xc6639C0591d632Bf689ceab617A0377072e7f524",
    "0x0Dcc19657007713483A5cA76e6A7bbe5f56EA37d"
  ],
  "numDeployments": 1,
  "solcInputHash": "d61058177fac708afa3b0215022115ad",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_attestationService\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_chronicle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_selfKisser\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalPayment\",\"type\":\"uint256\"}],\"name\":\"RequestCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceAtRequest\",\"type\":\"uint256\"}],\"name\":\"RequestCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"attestationService\",\"outputs\":[{\"internalType\":\"contract IAttestationService\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chronicle\",\"outputs\":[{\"internalType\":\"contract IChronicle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rating\",\"type\":\"uint256\"}],\"name\":\"completeRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"serviceProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"createRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAverageRating\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAtRequest\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct TransportWithAttestation.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ratingCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ratings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAtRequest\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfKisser\",\"outputs\":[{\"internalType\":\"contract ISelfKisser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TransactionwAttestation.sol\":\"TransportWithAttestation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TransactionwAttestation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\ninterface IAttestationService {\\n    function attest(address user, string calldata data) external;\\n    function getAttestations(address user) external view returns (string[] memory);\\n}\\n\\ninterface IChronicle {\\n    function read() external view returns (uint256 value);\\n    function readWithAge() external view returns (uint256 value, uint256 age);\\n}\\n\\ninterface ISelfKisser {\\n    function selfKiss(address oracle) external;\\n}\\n\\ncontract TransportWithAttestation {\\n    IAttestationService public attestationService;\\n    IChronicle public chronicle;\\n    ISelfKisser public selfKisser;\\n\\n    struct Request {\\n        address requester;\\n        address serviceProvider;\\n        uint paymentAmount;\\n        uint priceAtRequest;  // ETH/USD price when request was created\\n        bool completed;\\n    }\\n\\n    mapping(uint => Request) public requests;\\n    uint public requestCount;\\n\\n    mapping(address => uint) public ratings;\\n    mapping(address => uint) public ratingCounts;\\n\\n    event RequestCreated(uint requestId, address requester, uint paymentAmount, uint priceAtRequest);\\n    event RequestCompleted(uint requestId, uint rating, uint finalPayment);\\n\\n    //Chronicle Oracle : 0xc6639C0591d632Bf689ceab617A0377072e7f524\\n    //SelfKisser: 0x0Dcc19657007713483A5cA76e6A7bbe5f56EA37d\\n\\n    constructor(\\n        address _attestationService,\\n        address _chronicle,\\n        address _selfKisser\\n    ) {\\n        attestationService = IAttestationService(_attestationService);\\n        chronicle = IChronicle(_chronicle);\\n        selfKisser = ISelfKisser(_selfKisser);\\n        \\n        selfKisser.selfKiss(address(chronicle));\\n    }\\n    function read() external view returns (uint256 val, uint256 age) {\\n        (val, age) = chronicle.readWithAge();\\n    }\\n\\n    modifier onlyRequester(uint requestId) {\\n        require(requests[requestId].requester == msg.sender, \\\"Caller is not the requester\\\");\\n        _;\\n    }\\n\\n    modifier onlyServiceProvider(uint requestId) {\\n        require(requests[requestId].serviceProvider == msg.sender, \\\"Caller is not the service provider\\\");\\n        _;\\n    }\\n\\n   \\n    function createRequest(address serviceProvider, uint paymentAmount) public {\\n        (uint256 currentPrice, uint256 age) = chronicle.readWithAge();\\n        \\n        \\n        require(block.timestamp - age <= 1 hours, \\\"Oracle data too old\\\");\\n\\n        requestCount++;\\n        requests[requestCount] = Request({\\n            requester: msg.sender,\\n            serviceProvider: serviceProvider,\\n            paymentAmount: paymentAmount,\\n            priceAtRequest: currentPrice,\\n            completed: false\\n        });\\n\\n        emit RequestCreated(requestCount, msg.sender, paymentAmount, currentPrice);\\n    }\\n\\n    \\n    function completeRequest(uint requestId, uint rating) public onlyServiceProvider(requestId) {\\n        require(rating >= 1 && rating <= 5, \\\"Rating must be between 1 and 5\\\");\\n        \\n        Request storage request = requests[requestId];\\n        require(!request.completed, \\\"Request is already completed\\\");\\n\\n        (uint256 currentPrice, uint256 age) = chronicle.readWithAge();\\n        require(block.timestamp - age <= 1 hours, \\\"Oracle data too old\\\");\\n\\n        // Calculate final payment accounting for ETH price changes\\n        uint finalPayment = (request.paymentAmount * request.priceAtRequest) / currentPrice;\\n        \\n        request.completed = true;\\n        ratings[request.serviceProvider] += rating;\\n        ratingCounts[request.serviceProvider]++;\\n\\n        emit RequestCompleted(requestId, rating, finalPayment);\\n        \\n        // Create detailed attestation with price data\\n        string memory attestationData = string(abi.encodePacked(\\n            \\\"Request completed with rating: \\\", \\n            toString(rating),\\n            \\\", Final payment: \\\",\\n            toString(finalPayment)\\n        ));\\n        \\n        attestationService.attest(request.serviceProvider, attestationData);\\n    }\\n\\n   \\n    function getAverageRating(address user) public view returns (uint) {\\n        if (ratingCounts[user] == 0) {\\n            return 0;\\n        }\\n        return ratings[user] / ratingCounts[user];\\n    }\\n\\n   \\n    function getRequest(uint requestId) public view returns (Request memory) {\\n        return requests[requestId];\\n    }\\n\\n    \\n    function toString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n     \\n}\\n\",\"keccak256\":\"0x5578f8e062be02d55f54aa209452ed9f316968b51588b61a4639b9b8f5a7aedc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e1a380380610e1a83398101604081905261002f916100e1565b600080546001600160a01b038581166001600160a01b0319928316179092556001805485841690831681179091556002805493851693909216831790915560405163c529a67960e01b8152600481019190915263c529a67990602401600060405180830381600087803b1580156100a557600080fd5b505af11580156100b9573d6000803e3d6000fd5b50505050505050610124565b80516001600160a01b03811681146100dc57600080fd5b919050565b6000806000606084860312156100f657600080fd5b6100ff846100c5565b925061010d602085016100c5565b915061011b604085016100c5565b90509250925092565b610ce7806101336000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639e01dfbb116100715780639e01dfbb146101d2578063a34fa092146101f2578063c58343ef14610205578063c8b67522146102ea578063edc08925146102fd578063fa48f38e1461031257600080fd5b806320cb4e11146100b95780632cd04700146100ec57806332f929fc1461011757806357de26a41461012a5780635badbe4c1461014757806381d12c5814610150575b600080fd5b6100d96100c7366004610a55565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b6000546100ff906001600160a01b031681565b6040516001600160a01b0390911681526020016100e3565b6002546100ff906001600160a01b031681565b610132610325565b604080519283526020830191909152016100e3565b6100d960045481565b61019d61015e366004610a77565b6003602081905260009182526040909120805460018201546002830154938301546004909301546001600160a01b039283169492909116929060ff1685565b604080516001600160a01b0396871681529590941660208601529284019190915260608301521515608082015260a0016100e3565b6100d96101e0366004610a55565b60056020526000908152604090205481565b6001546100ff906001600160a01b031681565b61029d610213366004610a77565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260036020818152604092839020835160a08101855281546001600160a01b0390811682526001830154169281019290925260028101549382019390935290820154606082015260049091015460ff161515608082015290565b6040516100e3919081516001600160a01b03908116825260208084015190911690820152604080830151908201526060808301519082015260809182015115159181019190915260a00190565b6100d96102f8366004610a55565b61039c565b61031061030b366004610a90565b6103f8565b005b610310610320366004610aba565b6105b7565b60015460408051631c9f2f6f60e11b8152815160009384936001600160a01b039091169263393e5ede92600480830193928290030181865afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190610adc565b90939092509050565b6001600160a01b03811660009081526006602052604081205481036103c357506000919050565b6001600160a01b0382166000908152600660209081526040808320546005909252909120546103f29190610b2c565b92915050565b60015460408051631c9f2f6f60e11b8152815160009384936001600160a01b039091169263393e5ede92600480830193928290030181865afa158015610442573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104669190610adc565b9092509050610e106104788242610b40565b11156104c15760405162461bcd60e51b815260206004820152601360248201527213dc9858db194819185d18481d1bdbc81bdb19606a1b60448201526064015b60405180910390fd5b600480549060006104d183610b53565b90915550506040805160a081018252338082526001600160a01b03878116602080850191825284860189815260608087018a815260006080808a018281526004805484526003808952938d90209b518c546001600160a01b0319908116918c16919091178d55985160018d018054909a169a1699909917909755935160028a01559051908801559251958401805460ff191696151596909617909555915485519081529182019290925292830186905282018490527f41612386090d3716f01a2fa2e0e5b436c89d4479f1bd27e2644fe2ebad825cfe910160405180910390a150505050565b60008281526003602052604090206001015482906001600160a01b0316331461062d5760405162461bcd60e51b815260206004820152602260248201527f43616c6c6572206973206e6f742074686520736572766963652070726f76696460448201526132b960f11b60648201526084016104b8565b6001821015801561063f575060058211155b61068b5760405162461bcd60e51b815260206004820152601e60248201527f526174696e67206d757374206265206265747765656e203120616e642035000060448201526064016104b8565b6000838152600360205260409020600481015460ff16156106ee5760405162461bcd60e51b815260206004820152601c60248201527f5265717565737420697320616c726561647920636f6d706c657465640000000060448201526064016104b8565b60015460408051631c9f2f6f60e11b8152815160009384936001600160a01b039091169263393e5ede92600480830193928290030181865afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190610adc565b9092509050610e1061076e8242610b40565b11156107b25760405162461bcd60e51b815260206004820152601360248201527213dc9858db194819185d18481d1bdbc81bdb19606a1b60448201526064016104b8565b600082846003015485600201546107c99190610b6c565b6107d39190610b2c565b60048501805460ff191660019081179091558501546001600160a01b0316600090815260056020526040812080549293508892909190610814908490610b83565b909155505060018401546001600160a01b0316600090815260066020526040812080549161084183610b53565b909155505060408051888152602081018890529081018290527f10b486a111010a693b84457f0b6f846b84c8f0ba19ca4f64efce751fb6a642719060600160405180910390a1600061089287610930565b61089b83610930565b6040516020016108ac929190610bba565b60408051601f1981840301815290829052600054600188015463a3c06bfd60e01b84529193506001600160a01b039081169263a3c06bfd926108f49216908590600401610c2f565b600060405180830381600087803b15801561090e57600080fd5b505af1158015610922573d6000803e3d6000fd5b505050505050505050505050565b6060816000036109575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610981578061096b81610b53565b915061097a9050600a83610b2c565b915061095b565b60008167ffffffffffffffff81111561099c5761099c610c71565b6040519080825280601f01601f1916602001820160405280156109c6576020820181803683370190505b5090505b8415610a31576109db600183610b40565b91506109e8600a86610c87565b6109f3906030610b83565b60f81b818381518110610a0857610a08610c9b565b60200101906001600160f81b031916908160001a905350610a2a600a86610b2c565b94506109ca565b949350505050565b80356001600160a01b0381168114610a5057600080fd5b919050565b600060208284031215610a6757600080fd5b610a7082610a39565b9392505050565b600060208284031215610a8957600080fd5b5035919050565b60008060408385031215610aa357600080fd5b610aac83610a39565b946020939093013593505050565b60008060408385031215610acd57600080fd5b50508035926020909101359150565b60008060408385031215610aef57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082610b3b57610b3b610b00565b500490565b818103818111156103f2576103f2610b16565b600060018201610b6557610b65610b16565b5060010190565b80820281158282048414176103f2576103f2610b16565b808201808211156103f2576103f2610b16565b60005b83811015610bb1578181015183820152602001610b99565b50506000910152565b7f5265717565737420636f6d706c65746564207769746820726174696e673a2000815260008351610bf281601f850160208801610b96565b70016102334b730b6103830bcb6b2b73a1d1607d1b601f918401918201528351610c23816030840160208801610b96565b01603001949350505050565b60018060a01b03831681526040602082015260008251806040840152610c5c816060850160208701610b96565b601f01601f1916919091016060019392505050565b634e487b7160e01b600052604160045260246000fd5b600082610c9657610c96610b00565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a96b0d6a1738d77b7d6c5a27ba9004acc8bae7eb07adef12e50a6750319c90ca64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80639e01dfbb116100715780639e01dfbb146101d2578063a34fa092146101f2578063c58343ef14610205578063c8b67522146102ea578063edc08925146102fd578063fa48f38e1461031257600080fd5b806320cb4e11146100b95780632cd04700146100ec57806332f929fc1461011757806357de26a41461012a5780635badbe4c1461014757806381d12c5814610150575b600080fd5b6100d96100c7366004610a55565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b6000546100ff906001600160a01b031681565b6040516001600160a01b0390911681526020016100e3565b6002546100ff906001600160a01b031681565b610132610325565b604080519283526020830191909152016100e3565b6100d960045481565b61019d61015e366004610a77565b6003602081905260009182526040909120805460018201546002830154938301546004909301546001600160a01b039283169492909116929060ff1685565b604080516001600160a01b0396871681529590941660208601529284019190915260608301521515608082015260a0016100e3565b6100d96101e0366004610a55565b60056020526000908152604090205481565b6001546100ff906001600160a01b031681565b61029d610213366004610a77565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260036020818152604092839020835160a08101855281546001600160a01b0390811682526001830154169281019290925260028101549382019390935290820154606082015260049091015460ff161515608082015290565b6040516100e3919081516001600160a01b03908116825260208084015190911690820152604080830151908201526060808301519082015260809182015115159181019190915260a00190565b6100d96102f8366004610a55565b61039c565b61031061030b366004610a90565b6103f8565b005b610310610320366004610aba565b6105b7565b60015460408051631c9f2f6f60e11b8152815160009384936001600160a01b039091169263393e5ede92600480830193928290030181865afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190610adc565b90939092509050565b6001600160a01b03811660009081526006602052604081205481036103c357506000919050565b6001600160a01b0382166000908152600660209081526040808320546005909252909120546103f29190610b2c565b92915050565b60015460408051631c9f2f6f60e11b8152815160009384936001600160a01b039091169263393e5ede92600480830193928290030181865afa158015610442573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104669190610adc565b9092509050610e106104788242610b40565b11156104c15760405162461bcd60e51b815260206004820152601360248201527213dc9858db194819185d18481d1bdbc81bdb19606a1b60448201526064015b60405180910390fd5b600480549060006104d183610b53565b90915550506040805160a081018252338082526001600160a01b03878116602080850191825284860189815260608087018a815260006080808a018281526004805484526003808952938d90209b518c546001600160a01b0319908116918c16919091178d55985160018d018054909a169a1699909917909755935160028a01559051908801559251958401805460ff191696151596909617909555915485519081529182019290925292830186905282018490527f41612386090d3716f01a2fa2e0e5b436c89d4479f1bd27e2644fe2ebad825cfe910160405180910390a150505050565b60008281526003602052604090206001015482906001600160a01b0316331461062d5760405162461bcd60e51b815260206004820152602260248201527f43616c6c6572206973206e6f742074686520736572766963652070726f76696460448201526132b960f11b60648201526084016104b8565b6001821015801561063f575060058211155b61068b5760405162461bcd60e51b815260206004820152601e60248201527f526174696e67206d757374206265206265747765656e203120616e642035000060448201526064016104b8565b6000838152600360205260409020600481015460ff16156106ee5760405162461bcd60e51b815260206004820152601c60248201527f5265717565737420697320616c726561647920636f6d706c657465640000000060448201526064016104b8565b60015460408051631c9f2f6f60e11b8152815160009384936001600160a01b039091169263393e5ede92600480830193928290030181865afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190610adc565b9092509050610e1061076e8242610b40565b11156107b25760405162461bcd60e51b815260206004820152601360248201527213dc9858db194819185d18481d1bdbc81bdb19606a1b60448201526064016104b8565b600082846003015485600201546107c99190610b6c565b6107d39190610b2c565b60048501805460ff191660019081179091558501546001600160a01b0316600090815260056020526040812080549293508892909190610814908490610b83565b909155505060018401546001600160a01b0316600090815260066020526040812080549161084183610b53565b909155505060408051888152602081018890529081018290527f10b486a111010a693b84457f0b6f846b84c8f0ba19ca4f64efce751fb6a642719060600160405180910390a1600061089287610930565b61089b83610930565b6040516020016108ac929190610bba565b60408051601f1981840301815290829052600054600188015463a3c06bfd60e01b84529193506001600160a01b039081169263a3c06bfd926108f49216908590600401610c2f565b600060405180830381600087803b15801561090e57600080fd5b505af1158015610922573d6000803e3d6000fd5b505050505050505050505050565b6060816000036109575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610981578061096b81610b53565b915061097a9050600a83610b2c565b915061095b565b60008167ffffffffffffffff81111561099c5761099c610c71565b6040519080825280601f01601f1916602001820160405280156109c6576020820181803683370190505b5090505b8415610a31576109db600183610b40565b91506109e8600a86610c87565b6109f3906030610b83565b60f81b818381518110610a0857610a08610c9b565b60200101906001600160f81b031916908160001a905350610a2a600a86610b2c565b94506109ca565b949350505050565b80356001600160a01b0381168114610a5057600080fd5b919050565b600060208284031215610a6757600080fd5b610a7082610a39565b9392505050565b600060208284031215610a8957600080fd5b5035919050565b60008060408385031215610aa357600080fd5b610aac83610a39565b946020939093013593505050565b60008060408385031215610acd57600080fd5b50508035926020909101359150565b60008060408385031215610aef57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082610b3b57610b3b610b00565b500490565b818103818111156103f2576103f2610b16565b600060018201610b6557610b65610b16565b5060010190565b80820281158282048414176103f2576103f2610b16565b808201808211156103f2576103f2610b16565b60005b83811015610bb1578181015183820152602001610b99565b50506000910152565b7f5265717565737420636f6d706c65746564207769746820726174696e673a2000815260008351610bf281601f850160208801610b96565b70016102334b730b6103830bcb6b2b73a1d1607d1b601f918401918201528351610c23816030840160208801610b96565b01603001949350505050565b60018060a01b03831681526040602082015260008251806040840152610c5c816060850160208701610b96565b601f01601f1916919091016060019392505050565b634e487b7160e01b600052604160045260246000fd5b600082610c9657610c96610b00565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a96b0d6a1738d77b7d6c5a27ba9004acc8bae7eb07adef12e50a6750319c90ca64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 39,
        "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
        "label": "attestationService",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IAttestationService)17"
      },
      {
        "astId": 42,
        "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
        "label": "chronicle",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IChronicle)30"
      },
      {
        "astId": 45,
        "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
        "label": "selfKisser",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(ISelfKisser)36"
      },
      {
        "astId": 61,
        "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
        "label": "requests",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Request)56_storage)"
      },
      {
        "astId": 63,
        "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
        "label": "requestCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 67,
        "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
        "label": "ratings",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
        "label": "ratingCounts",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAttestationService)17": {
        "encoding": "inplace",
        "label": "contract IAttestationService",
        "numberOfBytes": "20"
      },
      "t_contract(IChronicle)30": {
        "encoding": "inplace",
        "label": "contract IChronicle",
        "numberOfBytes": "20"
      },
      "t_contract(ISelfKisser)36": {
        "encoding": "inplace",
        "label": "contract ISelfKisser",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Request)56_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct TransportWithAttestation.Request)",
        "numberOfBytes": "32",
        "value": "t_struct(Request)56_storage"
      },
      "t_struct(Request)56_storage": {
        "encoding": "inplace",
        "label": "struct TransportWithAttestation.Request",
        "members": [
          {
            "astId": 47,
            "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
            "label": "requester",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 49,
            "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
            "label": "serviceProvider",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 51,
            "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
            "label": "paymentAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 53,
            "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
            "label": "priceAtRequest",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 55,
            "contract": "contracts/TransactionwAttestation.sol:TransportWithAttestation",
            "label": "completed",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}