/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDABridge,
  IDABridgeInterface,
} from "../../../src/data-availability/IDABridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "blobHash",
        type: "bytes32",
      },
    ],
    name: "ValidatedBatchAttestationOverDA",
    type: "event",
  },
  {
    inputs: [],
    name: "DA_MESSAGE_HEADER_FLAG",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "verifyBatchAttestation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDABridge__factory {
  static readonly abi = _abi;
  static createInterface(): IDABridgeInterface {
    return new utils.Interface(_abi) as IDABridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDABridge {
    return new Contract(address, _abi, signerOrProvider) as IDABridge;
  }
}
